name: Create a new release off main

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  release:
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.pull_request.merged }}
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.SVC_LEAPFROG_AUTOMATION_GITHUB_PAT }}

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          pip install --upgrade pip .[test,release]

      - name: Bump version
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          python -m bumpversion bump patch --config-file bump.release.toml --allow-dirty --commit --tag -vv

      - uses: SebRollen/toml-action@v1.0.2
        id: read_project_name
        with:
            file: 'pyproject.toml'
            field: 'project.name'

      - uses: SebRollen/toml-action@v1.0.2
        id: read_project_version
        with:
            file: 'pyproject.toml'
            field: 'project.version'
   
      - name: Bundle schemas
        run: zip -r ${{ steps.read_project_name.outputs.value }}-${{ steps.read_project_version.outputs.value}}-schemas.zip schema

      - name: Build wheel
        run: python -m pip wheel --no-deps .

      - name: Tag and push
        run: |
          git push
          git push origin $TAG
        shell: bash
        env:
          TAG: v${{ steps.read_project_version.outputs.value }}

      - name: Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "*.zip,*.whl"
          generateReleaseNotes: true
          tag: "v${{ steps.read_project_version.outputs.value }}"

      - name: Publish to Azure Artifacts
        run: |
          echo "found package(s):"
          ls -1 ./ | grep ".whl"
          echo "uploading to ${{ vars.PYTHON_REPOSITORY_URL }} as ${{ vars.PYTHON_REPOSITORY_USER }}"
          twine upload --skip-existing --repository-url ${{ vars.PYTHON_REPOSITORY_URL }} -u ${{ vars.PYTHON_REPOSITORY_USER }} -p ${{ secrets.AZUREARTIFACTS_RW }} ./*.whl
